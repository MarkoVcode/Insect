worker_processes 4;
events { worker_connections 1024; }
http {
        upstream node-api {
              least_conn;
              server api1:8080 weight=10 max_fails=3 fail_timeout=30s;
              server api2:8080 weight=10 max_fails=3 fail_timeout=30s;
        }
        upstream node-ws {
              least_conn;
              server ws1:8080 weight=10 max_fails=3 fail_timeout=30s;
              server ws2:8080 weight=10 max_fails=3 fail_timeout=30s;
        }
        upstream node-web {
              ip_hash;
#	      least_conn;
              server web1:8080 weight=10 max_fails=3 fail_timeout=30s;
              server web2:8080 weight=10 max_fails=3 fail_timeout=30s;
        }

server {
    listen          443 default_server ssl;
    server_name         _;
    #ssl_protocols	TLSv1 TLSv1.1 TLSv1.2;
    ssl_certificate     /etc/ssl/thingoncloud_cert_chain.crt;
    ssl_certificate_key /etc/ssl/thingoncloud.key;
}

server {
    listen      443 ssl;
    server_name www.servicein.space;
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_min_length 20;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/javascript application/xml application/xml+rss text/javascript;
    location / {
		gzip_static on;
                proxy_pass http://node-web;
                proxy_http_version 1.1;
		if ($request_uri ~* ".(jpg|jpeg|gif|zip|css|png|ico|txt|js)(\?v=[0-9.]+)?$") {
			expires 365d;
			access_log off;
			add_header Cache-Control "public";
			break;
		}
	        proxy_set_header Host $host;
        	proxy_set_header X-Real-IP $remote_addr;
       		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                auth_basic "Restricted";
                auth_basic_user_file /etc/nginx/.htpasswd_toc;
               }
}

server {
    listen      80;
    server_name www.servicein.space;
    return      301 https://$server_name$request_uri;
}

server {
    listen      80;
    server_name servicein.space;
    return      301 https://www.$server_name$request_uri;
}

server {
    listen      443 ssl;
    server_name wss.servicein.space;
    location / {
                proxy_pass http://node-ws;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_read_timeout 86400s;
		proxy_send_timeout 86400s;
                proxy_cache_bypass $http_upgrade;
               }
}

server {
    listen      80;
    listen      443 ssl;
    server_name api.servicein.space;
    location / {
                proxy_pass http://node-api;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
               }
}

}
